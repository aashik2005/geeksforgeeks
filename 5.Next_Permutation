class Solution {
    void nextPermutation(int[] arr) {
        int n=arr.length;
        int pivot=-1;
        for(int i=n-2;i>-1;i--){
            if(arr[i]<arr[i+1]){
                pivot=i;
                break;
            }
        }
        if(pivot==-1){
            reverse(arr,0,n-1);
            return;
        }
        for(int i=n-1;i>pivot;i--){
             if(arr[i]>arr[pivot]){
                 int temp=arr[i];
                 arr[i]=arr[pivot];
                 arr[pivot]=temp;
                 break;
             }
        }
        int left=pivot+1;
        int right=n-1;
        reverse(arr,left,right);
    }
        private static int[] reverse(int arr[],int st,int en){
            while(st<en){
                int temp=arr[st];
                arr[st]=arr[en];
                arr[en]=temp;
                st++;
                en--;
            }
            return arr;
    }
}
