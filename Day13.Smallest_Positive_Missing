SMALLEST POSITIVE MISSING:

Difficulty: Medium || Accuracy: 25.13% || Submissions: 412K+ || Points: 4
You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.

Note: Positive number starts from 1. The array can have negative integers too.

Examples:
Input: arr[] = [2, -3, 4, 1, 1, 7]
Output: 3
Explanation: Smallest positive missing number is 3.

Input: arr[] = [5, 3, 2, 5, 1]
Output: 4
Explanation: Smallest positive missing number is 4.

Input: arr[] = [-8, 0, -1, -4, -3]
Output: 1
Explanation: Smallest positive missing number is 1.

SOLUTION:

class Solution {
    // Function to find the smallest positive number missing from the array.
    public int missingNumber(int[] arr) {
        // Your code here
        int n=arr.length;
        for(int i=0;i<n;i++){
            if(arr[i]<=0 || arr[i]>n){
                arr[i]=n+1;
            }
        }
        for(int i=0;i<n;i++){
            int num=Math.abs(arr[i]);
            if(num<=n && arr[num-1]>0){
                arr[num-1]=-arr[num-1];
            }
        }
        for(int i=0;i<n;i++){
            if(arr[i]>0){
                return i+1;
            }
        }
        return n+1;
    }
}
